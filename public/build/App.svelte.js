/* App.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	check_outros,
	component_subscribe,
	create_component,
	destroy_component,
	detach,
	element,
	globals,
	group_outros,
	init,
	insert,
	listen,
	mount_component,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "https://cdn.skypack.dev/svelte/internal";

const { window: window_1 } = globals;
import Nav from "./components/Nav.svelte.js";
import { currentPath, pages } from "./routes.js";

function create_fragment(ctx) {
	let nav;
	let t;
	let main;
	let switch_instance;
	let current;
	let mounted;
	let dispose;
	nav = new Nav({});
	var switch_value = pages[/*$currentPath*/ ctx[0]];

	function switch_props(ctx) {
		return {};
	}

	if (switch_value) {
		switch_instance = new switch_value(switch_props(ctx));
	}

	return {
		c() {
			create_component(nav.$$.fragment);
			t = space();
			main = element("main");
			if (switch_instance) create_component(switch_instance.$$.fragment);
		},
		m(target, anchor) {
			mount_component(nav, target, anchor);
			insert(target, t, anchor);
			insert(target, main, anchor);

			if (switch_instance) {
				mount_component(switch_instance, main, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen(window_1, "popstate", /*popstate_handler*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (switch_value !== (switch_value = pages[/*$currentPath*/ ctx[0]])) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;

					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});

					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props(ctx));
					create_component(switch_instance.$$.fragment);
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, main, null);
				} else {
					switch_instance = null;
				}
			} else if (switch_value) {
				
			}
		},
		i(local) {
			if (current) return;
			transition_in(nav.$$.fragment, local);
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(nav.$$.fragment, local);
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(nav, detaching);
			if (detaching) detach(t);
			if (detaching) detach(main);
			if (switch_instance) destroy_component(switch_instance);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $currentPath;
	component_subscribe($$self, currentPath, $$value => $$invalidate(0, $currentPath = $$value));
	const popstate_handler = () => currentPath.set(window.location.pathname);
	return [$currentPath, popstate_handler];
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default App;