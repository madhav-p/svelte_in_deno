/* Nav.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	append,
	attr,
	check_outros,
	create_component,
	destroy_component,
	destroy_each,
	detach,
	element,
	group_outros,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "https://cdn.skypack.dev/svelte/internal";

import Link from "./Link.svelte.js";

function add_css() {
	var style = element("style");
	style.id = "svelte-mgpfo2-style";
	style.textContent = "ul.svelte-mgpfo2{width:100%;display:flex;align-items:center;justify-content:space-around;background-color:orangered;padding:0.5em}li.svelte-mgpfo2{padding:0.5em;color:whitesmoke;list-style:none}li.svelte-mgpfo2:hover{background-color:rgb(253, 110, 57)}";
	append(document.head, style);
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (24:6) <Link path={route.path}>
function create_default_slot(ctx) {
	let t_value = /*route*/ ctx[1].name + "";
	let t;

	return {
		c() {
			t = text(t_value);
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (22:2) {#each navroutes as route}
function create_each_block(ctx) {
	let li;
	let link;
	let t;
	let current;

	link = new Link({
			props: {
				path: /*route*/ ctx[1].path,
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	return {
		c() {
			li = element("li");
			create_component(link.$$.fragment);
			t = space();
			attr(li, "class", "svelte-mgpfo2");
		},
		m(target, anchor) {
			insert(target, li, anchor);
			mount_component(link, li, null);
			append(li, t);
			current = true;
		},
		p(ctx, dirty) {
			const link_changes = {};

			if (dirty & /*$$scope*/ 16) {
				link_changes.$$scope = { dirty, ctx };
			}

			link.$set(link_changes);
		},
		i(local) {
			if (current) return;
			transition_in(link.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(link.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(li);
			destroy_component(link);
		}
	};
}

function create_fragment(ctx) {
	let ul;
	let current;
	let each_value = /*navroutes*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(ul, "class", "svelte-mgpfo2");
		},
		m(target, anchor) {
			insert(target, ul, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*navroutes*/ 1) {
				each_value = /*navroutes*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(ul, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(ul);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self) {
	const navroutes = [
		{ name: "Home", path: "/" },
		{ name: "About", path: "/about" },
		{ name: "Contact", path: "/contact" }
	];

	return [navroutes];
}

class Nav extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-mgpfo2-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Nav;