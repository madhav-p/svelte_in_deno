/* Link.svelte generated by Svelte v3.31.0 */
import {
	SvelteComponent,
	append,
	attr,
	create_slot,
	detach,
	element,
	init,
	insert,
	is_function,
	listen,
	prevent_default,
	safe_not_equal,
	transition_in,
	transition_out,
	update_slot
} from "https://cdn.skypack.dev/svelte/internal";

import { currentPath } from "../routes.js";

function add_css() {
	var style = element("style");
	style.id = "svelte-1wy9hju-style";
	style.textContent = "a.svelte-1wy9hju{color:inherit;text-decoration:none}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let a;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[3].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);

	return {
		c() {
			a = element("a");
			if (default_slot) default_slot.c();
			attr(a, "href", /*path*/ ctx[0]);
			attr(a, "class", "svelte-1wy9hju");
		},
		m(target, anchor) {
			insert(target, a, anchor);

			if (default_slot) {
				default_slot.m(a, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen(a, "click", prevent_default(function () {
					if (is_function(/*navigateTo*/ ctx[1](/*path*/ ctx[0]))) /*navigateTo*/ ctx[1](/*path*/ ctx[0]).apply(this, arguments);
				}));

				mounted = true;
			}
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 4) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[2], dirty, null, null);
				}
			}

			if (!current || dirty & /*path*/ 1) {
				attr(a, "href", /*path*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(a);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { path } = $$props;

	const navigateTo = path => {
		console.log(path);
		currentPath.set(path);
		window.history.pushState(null, null, path);
	};

	$$self.$$set = $$props => {
		if ("path" in $$props) $$invalidate(0, path = $$props.path);
		if ("$$scope" in $$props) $$invalidate(2, $$scope = $$props.$$scope);
	};

	return [path, navigateTo, $$scope, slots];
}

class Link extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1wy9hju-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, { path: 0 });
	}
}

export default Link;